# Contributing to use-page-view

Thank you for your interest in contributing to use-page-view! This document provides guidelines and instructions for contributing to this project.

## Code of Conduct

By participating in this project, you agree to maintain a respectful and inclusive environment for everyone.

## How Can I Contribute?

### Reporting Bugs

Before creating bug reports, please check the issue list as you might find out that you don't need to create one. When you are creating a bug report, please include as many details as possible:

- Use a clear and descriptive title
- Describe the exact steps to reproduce the problem
- Provide specific examples to demonstrate the steps
- Describe the behavior you observed after following the steps
- Explain which behavior you expected to see instead and why
- Include screenshots if possible
- Include your operating system and browser information

### Suggesting Enhancements

If you have a suggestion for a new feature or enhancement, please:

- Use a clear and descriptive title
- Provide a detailed description of the proposed functionality
- Explain why this enhancement would be useful
- List any similar features in other projects, if applicable

### Pull Requests

1. Fork the repo and create your branch from `main`
2. If you've added code that should be tested, add tests
3. If you've changed APIs, update the documentation
4. Ensure the test suite passes
5. Make sure your code lints
6. Issue that pull request!

## Development Setup

1. Clone the repository:

   ```bash
   git clone https://github.com/christophersesugh/use-page-view.git
   cd use-page-view
   ```

2. Install dependencies:

   ```bash
   npm install
   ```

3. Start development:
   ```bash
   npm run dev
   ```

## Testing

We use Vitest for testing. To run the tests:

```bash
npm test
```

To run tests in watch mode:

```bash
npm run test:watch
```

## Code Style

- We use TypeScript for type safety
- We use Prettier for code formatting
- We use ESLint for code linting

To check your code style:

```bash
npm run lint
```

To format your code:

```bash
npm run format
```

## Documentation

- All new features should be documented
- Update the README.md if necessary
- Add JSDoc comments to new functions and components
- Update the TypeScript types if you modify the API

## Commit Messages

Please follow these guidelines for commit messages:

- Use the present tense ("Add feature" not "Added feature")
- Use the imperative mood ("Move cursor to..." not "Moves cursor to...")
- Limit the first line to 72 characters or less
- Reference issues and pull requests liberally after the first line

## Release Process

1. Update version in `package.json`
2. Update CHANGELOG.md
3. Create a new tag
4. Push to npm

## Questions?

Feel free to open an issue for any questions you might have about contributing.

## License

By contributing to use-page-view, you agree that your contributions will be licensed under the project's MIT License.
